#############################################################################################################

## Lista usuários ativos com "senha nunca expirar"

# Importa o módulo do Active Directory
Import-Module ActiveDirectory

# Define a data atual
$dataAtual = Get-Date

# Busca todos os usuários ativos que têm a senha configurada para nunca expirar
$usuarios = Get-ADUser -Filter {Enabled -eq $true -and PasswordNeverExpires -eq $true} -Properties PasswordNeverExpires, LastLogonDate


#############################################################################################################

## Busca Hosts ativos
$usuarios | Select-Object Name, SamAccountName, LastLogonDate | Format-Table -AutoSize

$computers = Get-ADComputer -Filter * | Select-Object -ExpandProperty Name
foreach ($computer in $computers) {
    if (Test-Connection -ComputerName $computer -Count 2 -Quiet) {
        Write-Output "$computer está ativo."
    } else {
        Write-Output "$computer não está ativo."
    }
}
#############################################################################################################

# Obtenha todos os computadores do AD
$computers = Get-ADComputer -Filter * | Select-Object -ExpandProperty Name

# Crie uma lista para armazenar computadores ativos
$activeComputers = @()

foreach ($computer in $computers) {
    if (Test-Connection -ComputerName $computer -Count 2 -Quiet) {
        $activeComputers += $computer
    }
}

# Exiba os computadores ativos
$activeComputers

#############################################################################################################

# Busca Usuários Sem logins 45 dias

Import-Module ActiveDirectory
$days = 45
$date = (Get-Date).AddDays(-$days)
Get-ADUser -Filter {Enabled -eq $true -and LastLogonDate -lt $date} -Properties LastLogonDate | Select-Object Name, LastLogonDate

#############################################################################################################

##  BUSCA USUARIOS QUE NAO FIZERAM LOGINS NOS ULTIMOS 30 DIAS

# Definindo a data de corte
$dataLimite = (Get-Date).AddDays(-30)

# Buscando usuários no Active Directory
$usuariosInativos = Get-ADUser -Filter { LastLogonDate -lt $dataLimite -and Enabled -eq $true } -Properties LastLogonDate

# Exibindo os resultados
$usuariosInativos | Select-Object SamAccountName, LastLogonDate | Format-Table -AutoSize

#############################################################################################################

# Definindo a data de corte
$dataLimite = (Get-Date).AddDays(-30)

# Buscando usuários que não logaram nos últimos 30 dias
$usuariosInativos = Get-ADUser -Filter { LastLogonDate -lt $dataLimite -and Enabled -eq $true } -Properties LastLogonDate

# Desativando os usuários encontrados
foreach ($usuario in $usuariosInativos) {
    Disable-ADAccount -Identity $usuario.SamAccountName
    Write-Output "Usuário $($usuario.SamAccountName) desativado."
}

#############################################################################################################

# DESATIVAR USUARIO ACTIVE DIRECTORY POWERSHELL

Disable-ADAccount -Identity "jose.silva"

# VERIFICAR SE O USUÁRIO ESTÁ ATIVO

Get-ADUser -Identity "jose.silva" | Select-Object SamAccountName, Enabled
